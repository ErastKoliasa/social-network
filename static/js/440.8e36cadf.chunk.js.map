{"version":3,"file":"static/js/440.8e36cadf.chunk.js","mappings":"8KACA,EAA4B,yBAA5B,EAA6D,qBAA7D,EAA8F,yBAA9F,EAAoI,0BAApI,EAA8K,6BAA9K,EAAsN,wB,qECOhNA,EAAY,SAACC,GACf,OACI,SAAC,KAAI,CAACC,SAAUD,EAAMC,SAAS,SAC1B,gBAAGC,EAAY,EAAZA,aAAY,OACZ,kBAAMD,SAAUC,EAAcC,UAAWC,EAAiB,WACtD,0BACI,SAAC,KAAK,CAACC,KAAK,QAAQC,UAAWC,EAAAA,EAC3BC,YAAY,QACZC,UAAUC,EAAAA,EAAAA,IAAkBC,EAAAA,IAAUC,EAAAA,EAAAA,IAAU,MAChDT,UAAWC,OAEnB,0BACI,SAAC,KAAK,CAACC,KAAK,WAAWC,UAAWC,EAAAA,EAAOM,KAAK,WAC1CL,YAAY,WACZC,UAAUC,EAAAA,EAAAA,IAAkBC,EAAAA,IAAUC,EAAAA,EAAAA,IAAU,MAChDT,UAAWC,OAEnB,iBAAKD,UAAWC,EAAqB,WACjC,SAAC,KAAK,CAACC,KAAK,aAAaC,UAAU,QAAQO,KAAK,aAAa,oBAEjE,0BACI,mBAAQV,UAAWC,EAAgB,uBAEpC,GAIvB,EA6BA,GAAeU,EAAAA,EAAAA,KAZS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,OAE3B,IAE2B,SAACE,GACxB,MAAO,CACHC,MAAO,SAACC,EAAOC,EAAUC,GAAU,OAAKJ,GAASK,EAAAA,EAAAA,IAAkBH,EAAOC,EAAUC,GAAY,EAExG,GAEA,EA3Bc,SAACtB,GAIX,OAAIA,EAAMgB,QACC,SAAC,KAAQ,CAACQ,GAAG,cAGpB,iBAAKrB,UAAWC,EAAiB,WAC7B,eAAID,UAAWC,EAAa,oBAC5B,SAACL,EAAS,CAACE,SATF,SAACwB,GACfzB,EAAMmB,MAAMM,EAASL,MAAOK,EAASJ,SAAUI,EAASH,WAC3D,MAUJ,G,sGCjDA,G,QAAwB,8B,+CCEXI,EAAW,SAAH,GAAmC,IAA7BC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAS5B,GAAK,YACtC6B,EAAWD,EAAKE,SAAWF,EAAKG,MACtC,OACI,iBAAK5B,UAAW0B,EAAWzB,EAAe,GAAG,WACzC,uCAAeJ,GAAW2B,IACzBE,IAAY,0BAAOD,EAAKG,UAGrC,EAEaxB,EAAQ,SAAH,GAAmC,IAA7BoB,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAS5B,GAAK,YACnC6B,EAAWD,EAAKE,SAAWF,EAAKG,MACtC,OACI,iBAAK5B,UAAW0B,EAAWzB,EAAe,GAAG,WACzC,oCAAWJ,GAAW2B,IACrBE,IAAY,0BAAOD,EAAKG,UAGrC,C,wGCrBO,IAAMpB,EAAW,SAAAqB,GACpB,IAAIA,EACJ,MAAO,mBACX,EAEapB,EAAY,SAAAA,GAAS,OAAI,SAACoB,GACnC,GAAIA,EAAMC,OAASrB,EAAW,MAAM,iBAAN,OAAwBA,EAAS,WAEnE,CAAC,EAEYF,EAAoB,WAAH,2BAAOwB,EAAU,yBAAVA,EAAU,uBAAK,SAAAF,GAAK,OACrDE,EAAWC,QAAO,SAACJ,EAAOK,GAAS,OAAKL,GAASK,EAAUJ,EAAM,QAAEK,EAAU,E","sources":["webpack://social-network/./src/components/Login/Login.module.css?3530","components/Login/Login.js","webpack://social-network/./src/components/common/FormsControls/FormsControls.module.css?eb50","components/common/FormsControls/FormsControls.js","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginPage\":\"Login_loginPage__ItH07\",\"title\":\"Login_title__L6HJ6\",\"formLogin\":\"Login_formLogin__b+4+p\",\"inputLogin\":\"Login_inputLogin__Xnsse\",\"checkboxLogin\":\"Login_checkboxLogin__oGHQn\",\"btnLogin\":\"Login_btnLogin__Rwvau\"};","import React from \"react\";\r\nimport styles from \"./Login.module.css\"\r\nimport { Form, Field } from 'react-final-form'\r\nimport { Input } from \"../common/FormsControls/FormsControls\";\r\nimport { composeValidators, maxLength, required } from \"../../utils/validators/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginThunkCreator } from \"../../redux/authReducer\";\r\nimport { Navigate } from \"react-router-dom\";\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <Form onSubmit={props.onSubmit}>\r\n            {({ handleSubmit }) => (\r\n                <form onSubmit={handleSubmit} className={styles.formLogin}>\r\n                    <div>\r\n                        <Field name=\"email\" component={Input}\r\n                            placeholder=\"email\"\r\n                            validate={composeValidators(required, maxLength(240))}\r\n                            className={styles.inputLogin} />\r\n                    </div>\r\n                    <div>\r\n                        <Field name=\"password\" component={Input} type=\"password\"\r\n                            placeholder=\"password\"\r\n                            validate={composeValidators(required, maxLength(240))}\r\n                            className={styles.inputLogin} />\r\n                    </div>\r\n                    <div className={styles.checkboxLogin}>\r\n                        <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" /> Remember me?\r\n                    </div>\r\n                    <div>\r\n                        <button className={styles.btnLogin}>Login</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n       props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Navigate to=\"/profile\" />\r\n    }\r\n    return (\r\n        <div className={styles.loginPage}>\r\n            <h1 className={styles.title}>LOGIN</h1>\r\n            <LoginForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (email, password, rememberMe) => dispatch(loginThunkCreator(email, password, rememberMe)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormsControls_error__5peZk\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\n\r\nexport const TextArea = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError ? styles.error : \"\"}>\r\n            <textarea  {...props} {...input} />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError ? styles.error : \"\"}>\r\n            <input {...props} {...input} />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLength = maxLength => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined)"],"names":["LoginForm","props","onSubmit","handleSubmit","className","styles","name","component","Input","placeholder","validate","composeValidators","required","maxLength","type","connect","state","isAuth","auth","dispatch","login","email","password","rememberMe","loginThunkCreator","to","formData","TextArea","input","meta","hasError","touched","error","value","length","validators","reduce","validator","undefined"],"sourceRoot":""}